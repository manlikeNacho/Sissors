// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/manlikeNacho/Sissors/src/models"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// DeleteUrl mocks base method.
func (m *MockRepository) DeleteUrl(u models.Url) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUrl", u)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUrl indicates an expected call of DeleteUrl.
func (mr *MockRepositoryMockRecorder) DeleteUrl(u interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUrl", reflect.TypeOf((*MockRepository)(nil).DeleteUrl), u)
}

// GetUrl mocks base method.
func (m *MockRepository) GetUrl(s string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrl", s)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrl indicates an expected call of GetUrl.
func (mr *MockRepositoryMockRecorder) GetUrl(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrl", reflect.TypeOf((*MockRepository)(nil).GetUrl), s)
}

// SaveUrl mocks base method.
func (m *MockRepository) SaveUrl(u *models.Url) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveUrl", u)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveUrl indicates an expected call of SaveUrl.
func (mr *MockRepositoryMockRecorder) SaveUrl(u interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveUrl", reflect.TypeOf((*MockRepository)(nil).SaveUrl), u)
}
